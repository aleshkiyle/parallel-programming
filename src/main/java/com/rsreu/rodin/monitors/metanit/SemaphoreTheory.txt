Семафоры представляют собой ещё одно средство синхронизации для доступа к ресурсу.
В Java семафоры представленным классом Semaphore, который располагается в пакете java.util.concurrent

Для управления доступом к ресурсу семафор использует счётчик, представляюший количество разрешений.
Если значение счётчика больше 0, то поток получает доступ к ресурсу, при этом счётчик уменьшается на единицу.
После окончания работы с ресурсом поток освобождает семафор, и счётчик увеличивается на единицу. Если же счётчик
равен нулю, то поток блокируется и ждёт, пока не получит разрешение от семафора.

Установить количество разрешений для доступа к ресурсу можно с помощью конструкторов Semaphore:
- Semaphore (int permits)
- Semaphore (int permits, boolean fair)

Параметр permits указывает на количество допустимых решений для доступа к ресурсу. Параметр fair во втором конструкторе
позволяет установить очерёдность получения доступа. Ели он равен true, то разрешения будут предоставляться ожидающим
потокам в том порядке, в котором они заправшивали доступ. Если же он равен false, То разрешения будут предоставляться
в неопределённом порядке.

Для получения разрешения у семафора надо вызывать метод acquire(), который имеет две формы:
- void acquire() throws InterruptedException
- void acquire(int permits) throws InterruptedException

Для получения одного разрешения применеятся первый вариант, а для получения нескольких разрешений - второй.
После вызова этого метода пока поток не получит разрешение, он блокируется.

После окончания работы с ресурсом полученное ранее разрешение надо освободить с помощью метода release():
- release()
- release(int permits)

Первый вариант метода освобождает одно разрешение, а второй вариант - количество разрешений, указанных в permits.